{"openapi": "3.0.3", "info": {"title": "Bey Dev Real-Time Avatar API", "version": "1.0.0", "description": "API for managing avatars and real-time sessions in the Beyond Presence platform. This API enables creation and management of interactive avatar sessions with LiveKit integration for real-time communication.", "contact": {"name": "Bey Dev Support", "url": "https://bey.dev/support"}, "license": {"name": "MIT", "url": "https://opensource.org/licenses/MIT"}}, "servers": [{"url": "https://api.bey.dev", "description": "Production API Server"}], "tags": [{"name": "avatars", "description": "Operations for managing and retrieving available avatars"}, {"name": "sessions", "description": "Operations for creating and managing real-time avatar sessions"}], "paths": {"/v1/avatar": {"get": {"tags": ["avatars"], "summary": "List Available Avatars", "description": "Retrieves a paginated list of all available avatars that can be used to create real-time sessions. Each avatar represents a unique character or persona with distinct visual and behavioral characteristics.", "operationId": "listAvatars", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "limit", "in": "query", "description": "Maximum number of avatars to return per page", "required": false, "schema": {"type": "integer", "minimum": 1, "maximum": 100, "default": 20}}, {"name": "offset", "in": "query", "description": "Number of avatars to skip for pagination", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0}}], "responses": {"200": {"description": "Successfully retrieved list of available avatars", "content": {"application/json": {"schema": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/AvatarResponseModel"}}, "total": {"type": "integer", "description": "Total number of avatars available"}, "limit": {"type": "integer", "description": "Number of avatars returned in this response"}, "offset": {"type": "integer", "description": "Number of avatars skipped"}}, "required": ["data", "total", "limit", "offset"]}, "examples": {"success": {"summary": "Successful avatar list response", "value": {"data": [{"id": "01234567-89ab-cdef-0123-456789abcdef", "name": "John Doe", "description": "Professional business avatar with formal attire", "category": "business", "is_active": true}], "total": 1, "limit": 20, "offset": 0}}}}}, "headers": {"X-RateLimit-Remaining": {"description": "Number of requests remaining in current rate limit window", "schema": {"type": "integer"}}, "X-RateLimit-Reset": {"description": "UTC timestamp when rate limit resets", "schema": {"type": "integer"}}}}, "401": {"$ref": "#/components/responses/UnauthorizedError"}, "403": {"$ref": "#/components/responses/ForbiddenError"}, "429": {"$ref": "#/components/responses/RateLimitError"}, "500": {"$ref": "#/components/responses/InternalServerError"}}, "x-rate-limit": {"requests": 100, "window": "1m"}, "x-cache-ttl": 300}}, "/v1/session": {"post": {"tags": ["sessions"], "summary": "Create New Avatar Session", "description": "Creates a new real-time avatar session with the specified avatar and LiveKit configuration. The session establishes a connection between the avatar and a LiveKit room for real-time communication and interaction.", "operationId": "createSession", "requestBody": {"description": "Session creation parameters including avatar selection and LiveKit configuration", "required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SessionRequestModel"}, "examples": {"basic_session": {"summary": "Basic session creation", "value": {"avatar_id": "01234567-89ab-cdef-0123-456789abcdef", "livekit_url": "wss://your-domain.livekit.cloud", "livekit_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...", "session_config": {"max_duration": 3600, "auto_cleanup": true}}}}}}}, "security": [{"APIKeyHeader": []}], "responses": {"201": {"description": "Session successfully created and initialized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SessionResponseModel"}, "examples": {"success": {"summary": "Successful session creation", "value": {"id": "01234567-89ab-cdef-0123-456789abcdef", "created_at": "2024-01-01T12:00:00Z", "avatar_id": "01234567-89ab-cdef-0123-456789abcdef", "livekit_url": "wss://your-domain.livekit.cloud", "livekit_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...", "status": "active", "expires_at": "2024-01-01T13:00:00Z"}}}}}, "headers": {"Location": {"description": "URL of the created session", "schema": {"type": "string", "format": "uri"}}}}, "400": {"$ref": "#/components/responses/BadRequestError"}, "401": {"$ref": "#/components/responses/UnauthorizedError"}, "404": {"description": "Avatar not found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"avatar_not_found": {"summary": "Avatar not found", "value": {"error": "AVATAR_NOT_FOUND", "message": "The specified avatar ID does not exist or is not available", "details": {"avatar_id": "01234567-89ab-cdef-0123-456789abcdef"}}}}}}}, "422": {"description": "Validation error in request payload", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}, "examples": {"validation_error": {"summary": "Request validation failed", "value": {"detail": [{"loc": ["body", "avatar_id"], "msg": "field required", "type": "value_error.missing"}]}}}}}}, "429": {"$ref": "#/components/responses/RateLimitError"}, "500": {"$ref": "#/components/responses/InternalServerError"}}, "x-rate-limit": {"requests": 10, "window": "1m"}}, "get": {"tags": ["sessions"], "summary": "List User Sessions", "description": "Retrieves a paginated list of all sessions created by the authenticated user. Includes both active and completed sessions with their current status and metadata.", "operationId": "listSessions", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "status", "in": "query", "description": "Filter sessions by status", "required": false, "schema": {"type": "string", "enum": ["active", "completed", "failed", "expired"], "example": "active"}}, {"name": "avatar_id", "in": "query", "description": "Filter sessions by avatar ID", "required": false, "schema": {"type": "string", "format": "uuid", "example": "01234567-89ab-cdef-0123-456789abcdef"}}, {"name": "limit", "in": "query", "description": "Maximum number of sessions to return per page", "required": false, "schema": {"type": "integer", "minimum": 1, "maximum": 100, "default": 20}}, {"name": "offset", "in": "query", "description": "Number of sessions to skip for pagination", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0}}], "responses": {"200": {"description": "Successfully retrieved list of user sessions", "content": {"application/json": {"schema": {"type": "object", "properties": {"data": {"type": "array", "items": {"$ref": "#/components/schemas/SessionResponseModel"}}, "total": {"type": "integer", "description": "Total number of sessions for the user"}, "limit": {"type": "integer"}, "offset": {"type": "integer"}}, "required": ["data", "total", "limit", "offset"]}, "examples": {"success": {"summary": "Successful sessions list", "value": {"data": [{"id": "01234567-89ab-cdef-0123-456789abcdef", "created_at": "2024-01-01T12:00:00Z", "avatar_id": "01234567-89ab-cdef-0123-456789abcdef", "livekit_url": "wss://your-domain.livekit.cloud", "livekit_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...", "status": "active", "expires_at": "2024-01-01T13:00:00Z"}], "total": 1, "limit": 20, "offset": 0}}}}}}, "401": {"$ref": "#/components/responses/UnauthorizedError"}, "429": {"$ref": "#/components/responses/RateLimitError"}, "500": {"$ref": "#/components/responses/InternalServerError"}}, "x-rate-limit": {"requests": 100, "window": "1m"}, "x-cache-ttl": 60}}, "/v1/session/{id}": {"get": {"tags": ["sessions"], "summary": "Get Session Details", "description": "Retrieves detailed information about a specific session including its current status, configuration, and metadata. Use this endpoint to check session health and get connection details.", "operationId": "getSession", "parameters": [{"name": "id", "in": "path", "description": "Unique identifier of the session to retrieve", "required": true, "schema": {"type": "string", "format": "uuid", "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "example": "01234567-89ab-cdef-0123-456789abcdef"}}], "security": [{"APIKeyHeader": []}], "responses": {"200": {"description": "Successfully retrieved session details", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SessionResponseModel"}, "examples": {"active_session": {"summary": "Active session details", "value": {"id": "01234567-89ab-cdef-0123-456789abcdef", "created_at": "2024-01-01T12:00:00Z", "avatar_id": "01234567-89ab-cdef-0123-456789abcdef", "livekit_url": "wss://your-domain.livekit.cloud", "livekit_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...", "status": "active", "expires_at": "2024-01-01T13:00:00Z"}}}}}}, "401": {"$ref": "#/components/responses/UnauthorizedError"}, "404": {"description": "Session not found or access denied", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"session_not_found": {"summary": "Session not found", "value": {"error": "SESSION_NOT_FOUND", "message": "The specified session does not exist or you don't have access to it", "details": {"session_id": "01234567-89ab-cdef-0123-456789abcdef"}}}}}}}, "422": {"description": "Invalid session ID format", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}, "examples": {"invalid_uuid": {"summary": "Invalid UUID format", "value": {"detail": [{"loc": ["path", "id"], "msg": "value is not a valid uuid", "type": "type_error.uuid"}]}}}}}}, "429": {"$ref": "#/components/responses/RateLimitError"}, "500": {"$ref": "#/components/responses/InternalServerError"}}, "x-rate-limit": {"requests": 200, "window": "1m"}, "x-cache-ttl": 30}}}, "components": {"schemas": {"AvatarResponseModel": {"type": "object", "required": ["id", "name", "description", "category", "is_active"], "properties": {"id": {"type": "string", "format": "uuid", "title": "Avatar ID", "description": "The unique identifier (UUID) of the avatar", "example": "01234567-89ab-cdef-0123-456789abcdef"}, "name": {"type": "string", "title": "Avatar Name", "description": "The display name of the avatar", "minLength": 1, "maxLength": 100, "example": "John Doe"}, "description": {"type": "string", "title": "Description", "description": "Detailed description of the avatar's appearance and characteristics", "maxLength": 500, "example": "Professional business avatar with formal attire and confident demeanor"}, "category": {"type": "string", "title": "Category", "description": "The category or type of avatar", "enum": ["business", "casual", "formal", "creative", "educational"], "example": "business"}, "is_active": {"type": "boolean", "title": "Is Active", "description": "Whether the avatar is currently available for use", "example": true}, "thumbnail_url": {"type": "string", "format": "uri", "title": "Thumbnail URL", "description": "URL to the avatar's preview image", "example": "https://cdn.bey.dev/avatars/thumbnail_123.jpg"}}, "title": "AvatarResponseModel", "description": "Represents an available avatar that can be used in real-time sessions"}, "SessionRequestModel": {"type": "object", "required": ["avatar_id", "livekit_url", "livekit_token"], "properties": {"avatar_id": {"type": "string", "format": "uuid", "title": "Avatar ID", "description": "The unique identifier of the avatar to use in this session", "example": "01234567-89ab-cdef-0123-456789abcdef"}, "livekit_url": {"type": "string", "format": "uri", "title": "LiveKit URL", "description": "The WebSocket URL of your LiveKit server instance", "pattern": "^wss://.*", "example": "wss://your-domain.livekit.cloud"}, "livekit_token": {"type": "string", "title": "LiveKit Token", "description": "Valid JWT token for authenticating with the LiveKit room", "minLength": 10, "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}, "session_config": {"type": "object", "title": "Session Configuration", "description": "Optional configuration parameters for the session", "properties": {"max_duration": {"type": "integer", "description": "Maximum session duration in seconds", "minimum": 60, "maximum": 14400, "default": 3600, "example": 3600}, "auto_cleanup": {"type": "boolean", "description": "Whether to automatically clean up the session when it expires", "default": true, "example": true}}}}, "title": "SessionRequestModel", "description": "Request payload for creating a new avatar session"}, "SessionResponseModel": {"type": "object", "required": ["id", "created_at", "avatar_id", "livekit_url", "livekit_token", "status"], "properties": {"id": {"type": "string", "format": "uuid", "title": "Session ID", "description": "The unique identifier (UUID) of the session", "example": "01234567-89ab-cdef-0123-456789abcdef"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "description": "ISO 8601 timestamp when the session was created", "example": "2024-01-01T12:00:00Z"}, "avatar_id": {"type": "string", "format": "uuid", "title": "Avatar ID", "description": "The ID of the avatar used in this session", "example": "01234567-89ab-cdef-0123-456789abcdef"}, "livekit_url": {"type": "string", "format": "uri", "title": "LiveKit URL", "description": "The LiveKit WebSocket URL for this session", "example": "wss://your-domain.livekit.cloud"}, "livekit_token": {"type": "string", "title": "LiveKit Token", "description": "The JWT token for accessing the LiveKit room", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}, "status": {"type": "string", "title": "Session Status", "description": "Current status of the session", "enum": ["initializing", "active", "completed", "failed", "expired"], "example": "active"}, "expires_at": {"type": "string", "format": "date-time", "title": "Expires At", "description": "ISO 8601 timestamp when the session will expire", "example": "2024-01-01T13:00:00Z"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "description": "ISO 8601 timestamp when the session was last updated", "example": "2024-01-01T12:30:00Z"}}, "title": "SessionResponseModel", "description": "Response model containing session details and connection information"}, "ValidationError": {"type": "object", "required": ["loc", "msg", "type"], "properties": {"loc": {"type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "title": "Location", "description": "Path to the field that caused the validation error"}, "msg": {"type": "string", "title": "Message", "description": "Human-readable error message"}, "type": {"type": "string", "title": "Error Type", "description": "Machine-readable error type identifier"}}, "title": "ValidationError", "description": "Individual validation error details"}, "HTTPValidationError": {"type": "object", "properties": {"detail": {"type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "description": "List of validation errors that occurred"}}, "title": "HTTPValidationError", "description": "Response model for HTTP 422 validation errors"}, "ErrorResponse": {"type": "object", "required": ["error", "message"], "properties": {"error": {"type": "string", "title": "Error Code", "description": "Machine-readable error code", "example": "RESOURCE_NOT_FOUND"}, "message": {"type": "string", "title": "Error Message", "description": "Human-readable error description", "example": "The requested resource was not found"}, "details": {"type": "object", "title": "Error Details", "description": "Additional context about the error", "additionalProperties": true}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp", "description": "When the error occurred", "example": "2024-01-01T12:00:00Z"}}, "title": "ErrorResponse", "description": "Standard error response format"}}, "responses": {"UnauthorizedError": {"description": "Authentication credentials missing or invalid", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"missing_api_key": {"summary": "Missing API key", "value": {"error": "UNAUTHORIZED", "message": "API key is required. Please provide a valid API key in the X-API-KEY header.", "timestamp": "2024-01-01T12:00:00Z"}}}}}}, "ForbiddenError": {"description": "Access denied - insufficient permissions", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"insufficient_permissions": {"summary": "Insufficient permissions", "value": {"error": "FORBIDDEN", "message": "You don't have permission to access this resource", "timestamp": "2024-01-01T12:00:00Z"}}}}}}, "BadRequestError": {"description": "Invalid request format or parameters", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"invalid_request": {"summary": "Invalid request", "value": {"error": "BAD_REQUEST", "message": "The request contains invalid parameters or formatting", "timestamp": "2024-01-01T12:00:00Z"}}}}}}, "RateLimitError": {"description": "Rate limit exceeded", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"rate_limit_exceeded": {"summary": "Rate limit exceeded", "value": {"error": "RATE_LIMIT_EXCEEDED", "message": "You have exceeded the rate limit. Please try again later.", "details": {"retry_after": 60}, "timestamp": "2024-01-01T12:00:00Z"}}}}}, "headers": {"Retry-After": {"description": "Number of seconds to wait before retrying", "schema": {"type": "integer"}}}}, "InternalServerError": {"description": "Internal server error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResponse"}, "examples": {"server_error": {"summary": "Internal server error", "value": {"error": "INTERNAL_SERVER_ERROR", "message": "An unexpected error occurred. Please try again later.", "timestamp": "2024-01-01T12:00:00Z"}}}}}}}, "securitySchemes": {"APIKeyHeader": {"type": "apiKey", "in": "header", "name": "X-API-KEY", "description": "API key for authentication. Include your API key in the X-API-KEY header for all requests."}}}, "security": [{"APIKeyHeader": []}]}